"""empty message

Revision ID: 8acde021d8da
Revises: 677e514094ba
Create Date: 2019-11-05 19:49:33.245910

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '8acde021d8da'
down_revision = '677e514094ba'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('communities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('create_date', sa.DateTime(), nullable=True),
    sa.Column('update_date', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.Column('description', sa.String(length=1000), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_communities_update_date'), 'communities', ['update_date'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('create_date', sa.DateTime(), nullable=True),
    sa.Column('update_date', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.Column('email', sa.String(length=80), nullable=False),
    sa.Column('google_id', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_users_update_date'), 'users', ['update_date'], unique=False)
    op.create_table('debates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('create_date', sa.DateTime(), nullable=True),
    sa.Column('update_date', sa.DateTime(), nullable=True),
    sa.Column('title', sa.String(length=1000), nullable=False),
    sa.Column('description', sa.String(length=10000), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=False),
    sa.Column('community_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['community_id'], ['communities.id'], ),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_debates_update_date'), 'debates', ['update_date'], unique=False)
    op.create_table('users_communities',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('community_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['community_id'], ['communities.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], )
    )
    op.create_table('arguments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('create_date', sa.DateTime(), nullable=True),
    sa.Column('update_date', sa.DateTime(), nullable=True),
    sa.Column('title', sa.String(length=1000), nullable=False),
    sa.Column('content', sa.String(length=1000000), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('debate_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['debate_id'], ['debates.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_arguments_update_date'), 'arguments', ['update_date'], unique=False)
    op.drop_index('ix_Arguments_update_date', table_name='Arguments')
    op.drop_table('Arguments')
    op.drop_index('ix_Debates_update_date', table_name='Debates')
    op.drop_table('Debates')
    op.drop_table('Users_communities')
    op.drop_index('ix_Users_update_date', table_name='Users')
    op.drop_table('Users')
    op.drop_index('ix_Communities_update_date', table_name='Communities')
    op.drop_table('Communities')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Communities',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"Communities_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('create_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('update_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=1000), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='Communities_pkey'),
    sa.UniqueConstraint('name', name='Communities_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_Communities_update_date', 'Communities', ['update_date'], unique=False)
    op.create_table('Users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"Users_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('create_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('update_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('google_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='Users_pkey'),
    sa.UniqueConstraint('name', name='Users_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_Users_update_date', 'Users', ['update_date'], unique=False)
    op.create_table('Users_communities',
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('community_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['community_id'], ['Communities.id'], name='Users_communities_community_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['Users.id'], name='Users_communities_user_id_fkey')
    )
    op.create_table('Debates',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"Debates_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('create_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('update_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('title', sa.VARCHAR(length=1000), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=10000), autoincrement=False, nullable=True),
    sa.Column('creator_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('community_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['community_id'], ['Communities.id'], name='Debates_community_id_fkey'),
    sa.ForeignKeyConstraint(['creator_id'], ['Users.id'], name='Debates_creator_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='Debates_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_Debates_update_date', 'Debates', ['update_date'], unique=False)
    op.create_table('Arguments',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"Arguments_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('create_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('update_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('title', sa.VARCHAR(length=1000), autoincrement=False, nullable=False),
    sa.Column('content', sa.VARCHAR(length=1000000), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('debate_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['debate_id'], ['Debates.id'], name='Arguments_debate_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['Users.id'], name='Arguments_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='Arguments_pkey')
    )
    op.create_index('ix_Arguments_update_date', 'Arguments', ['update_date'], unique=False)
    op.drop_index(op.f('ix_arguments_update_date'), table_name='arguments')
    op.drop_table('arguments')
    op.drop_table('users_communities')
    op.drop_index(op.f('ix_debates_update_date'), table_name='debates')
    op.drop_table('debates')
    op.drop_index(op.f('ix_users_update_date'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_communities_update_date'), table_name='communities')
    op.drop_table('communities')
    # ### end Alembic commands ###
